.DEFAULT_GOAL := test

.PHONY: clean help requirements test validate quality production-requirements migrate static clean_static

# Generates a help message. Borrowed from https://github.com/pydanny/cookiecutter-djangopackage.
help: ## Display this help message
	@echo "Please use \`make <target>\` where <target> is one of"
	@perl -nle'print $& if m{^[\.a-zA-Z_-]+:.*?## .*$$}' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m  %-25s\033[0m %s\n", $$1, $$2}'


clean: ## Delete generated byte code and coverage reports
	find . -name '*.pyc' -delete
	coverage erase

docker.build: ## Build the Docker containers
	docker-compose build

docker.pull: ## Pull the Docker containers
	docker-compose pull

docker.down: ## Stop the Docker containers
	docker-compose -f docker-compose.yml -f docker-compose.$*.yml down

docker.up: ## Start the  Docker containers
	docker-compose -f docker-compose.yml -f up -d

requirements: ## Install requirements
	pip install -r requirements.txt

detect_missing_migrations:  ## Determine if any apps are missing generated migrations
	python manage.py makemigrations --check --dry-run || (echo "Migration files are missing. Please run the "makemigrations" management command, and commit the migrations." && false)

migrate: ## Apply database migrations
	python manage.py migrate --noinput

static: ## Gather all static assets for production
	python manage.py collectstatic --noinput
